// Generated by view binder compiler. Do not edit!
package com.example.project2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton creature1;

  @NonNull
  public final ImageButton creature2;

  @NonNull
  public final ImageButton creature3;

  @NonNull
  public final Button hiddenBtn;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button rankingsButton;

  @NonNull
  public final TextView selectMessage;

  @NonNull
  public final TextView welcomeMessage;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton creature1,
      @NonNull ImageButton creature2, @NonNull ImageButton creature3, @NonNull Button hiddenBtn,
      @NonNull ConstraintLayout main, @NonNull Button rankingsButton,
      @NonNull TextView selectMessage, @NonNull TextView welcomeMessage) {
    this.rootView = rootView;
    this.creature1 = creature1;
    this.creature2 = creature2;
    this.creature3 = creature3;
    this.hiddenBtn = hiddenBtn;
    this.main = main;
    this.rankingsButton = rankingsButton;
    this.selectMessage = selectMessage;
    this.welcomeMessage = welcomeMessage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.creature1;
      ImageButton creature1 = ViewBindings.findChildViewById(rootView, id);
      if (creature1 == null) {
        break missingId;
      }

      id = R.id.creature2;
      ImageButton creature2 = ViewBindings.findChildViewById(rootView, id);
      if (creature2 == null) {
        break missingId;
      }

      id = R.id.creature3;
      ImageButton creature3 = ViewBindings.findChildViewById(rootView, id);
      if (creature3 == null) {
        break missingId;
      }

      id = R.id.hiddenBtn;
      Button hiddenBtn = ViewBindings.findChildViewById(rootView, id);
      if (hiddenBtn == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.rankingsButton;
      Button rankingsButton = ViewBindings.findChildViewById(rootView, id);
      if (rankingsButton == null) {
        break missingId;
      }

      id = R.id.selectMessage;
      TextView selectMessage = ViewBindings.findChildViewById(rootView, id);
      if (selectMessage == null) {
        break missingId;
      }

      id = R.id.welcomeMessage;
      TextView welcomeMessage = ViewBindings.findChildViewById(rootView, id);
      if (welcomeMessage == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, creature1, creature2, creature3,
          hiddenBtn, main, rankingsButton, selectMessage, welcomeMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
