// Generated by view binder compiler. Do not edit!
package com.example.project2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText passwordCheckEditText;

  @NonNull
  public final EditText passwordLoginEditText;

  @NonNull
  public final Button signUpButton;

  @NonNull
  public final TextView titleLoginTextView;

  @NonNull
  public final EditText usernameLoginEditText;

  private SignupBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout main,
      @NonNull EditText passwordCheckEditText, @NonNull EditText passwordLoginEditText,
      @NonNull Button signUpButton, @NonNull TextView titleLoginTextView,
      @NonNull EditText usernameLoginEditText) {
    this.rootView = rootView;
    this.main = main;
    this.passwordCheckEditText = passwordCheckEditText;
    this.passwordLoginEditText = passwordLoginEditText;
    this.signUpButton = signUpButton;
    this.titleLoginTextView = titleLoginTextView;
    this.usernameLoginEditText = usernameLoginEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.passwordCheckEditText;
      EditText passwordCheckEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordCheckEditText == null) {
        break missingId;
      }

      id = R.id.passwordLoginEditText;
      EditText passwordLoginEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordLoginEditText == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.titleLoginTextView;
      TextView titleLoginTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleLoginTextView == null) {
        break missingId;
      }

      id = R.id.usernameLoginEditText;
      EditText usernameLoginEditText = ViewBindings.findChildViewById(rootView, id);
      if (usernameLoginEditText == null) {
        break missingId;
      }

      return new SignupBinding((ConstraintLayout) rootView, main, passwordCheckEditText,
          passwordLoginEditText, signUpButton, titleLoginTextView, usernameLoginEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
